---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
const posts = await getCollection('posts');
const englishPosts = posts.filter(p => p.data.language === 'en').slice(0, 15);

// Group posts by category
const categories = {
  psychology: { name: 'Psychology', emoji: '🧠', color: '#9333ea' },
  astrology: { name: 'Astrology & Zodiac', emoji: '⭐', color: '#f59e0b' },
  space: { name: 'Space & Cosmos', emoji: '🚀', color: '#2563eb' },
  history: { name: 'History & Ancient', emoji: '🏛️', color: '#059669' },
  science: { name: 'Science & Discovery', emoji: '🔬', color: '#dc2626' },
  lifestyle: { name: 'Health & Lifestyle', emoji: '🌿', color: '#16a34a' },
  mystery: { name: 'Mysteries & Phenomena', emoji: '👁️', color: '#7c3aed' }
};

const categorizedPosts = Object.fromEntries(
  Object.keys(categories).map(cat => [
    cat,
    englishPosts.filter(p => p.data.category === cat).slice(0, 3)
  ])
);
---

<Layout title="MindPulse Daily - Daily Knowledge Drops">
  <main style="max-width: 900px; margin: 0 auto; padding: 2rem 1rem;">
    <div style="text-align: center; margin-bottom: 3rem;">
      <h1 style="font-size: 3rem; font-weight: 900; color: #1f2937; margin-bottom: 1.2rem; line-height: 1.1; letter-spacing: -0.03em;">
        🧠 MindPulse Daily
      </h1>
      <p style="font-size: 1.25rem; color: #6b7280; margin-bottom: 2rem; max-width: 40rem; margin-left: auto; margin-right: auto; line-height: 1.6;">
        Expand your mind with daily insights in psychology, science, space, astrology, and more. No noise, just pure knowledge.
      </p>
    </div>

    <!-- Category Navigation -->
    <div style="margin-bottom: 2.5rem;">
      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); gap: 1rem; max-width: 700px; margin: 0 auto;">
        {Object.entries(categories).map(([key, cat]) => (
          <a href={`#${key}`}
             style={`display: flex; align-items: center; gap: 0.75rem; padding: 0.75rem 1rem; background: white; border-radius: 0.75rem; box-shadow: 0 2px 8px rgba(0,0,0,0.07); text-decoration: none; border-left: 4px solid ${cat.color}; font-weight: 500; color: #1f2937; transition: box-shadow 0.2s;`}
             onmouseover={`this.style.boxShadow='0 4px 16px rgba(0,0,0,0.10)';`}
             onmouseout={`this.style.boxShadow='0 2px 8px rgba(0,0,0,0.07)';`}>
            <span style="font-size: 1.3rem;">{cat.emoji}</span>
            <span>{cat.name}</span>
          </a>
        ))}
      </div>
    </div>

    <!-- Category Sections -->
    {Object.entries(categories).map(([categoryKey, categoryInfo]) => {
      const categoryPosts = categorizedPosts[categoryKey];
      if (!categoryPosts || categoryPosts.length === 0) return null;
      return (
        <section id={categoryKey} style="margin-bottom: 3rem;">
          <div style="display: flex; align-items: center; gap: 1rem; margin-bottom: 1.5rem;">
            <span style="font-size: 1.5rem;">{categoryInfo.emoji}</span>
            <h2 style={`font-size: 1.2rem; font-weight: 700; color: ${categoryInfo.color}; margin: 0; letter-spacing: -0.01em;`}>
              {categoryInfo.name}
            </h2>
          </div>
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1.2rem;">
            {categoryPosts.map((post) => (
              <article style="background: white; border-radius: 0.75rem; overflow: hidden; box-shadow: 0 2px 8px rgba(0,0,0,0.07); border-top: 3px solid ${categoryInfo.color}; transition: box-shadow 0.2s; padding: 1.2rem 1rem; display: flex; flex-direction: column; gap: 0.5rem;">
                <h3 style="font-size: 1.05rem; font-weight: 700; color: #1f2937; margin-bottom: 0.5rem; line-height: 1.4;">
                  <a href={`/posts/${post.slug}`} style="text-decoration: none; color: inherit;">
                    {post.data.title}
                  </a>
                </h3>
                <p style="color: #6b7280; font-size: 0.93rem; line-height: 1.5; margin-bottom: 0.5rem;">
                  {post.data.description}
                </p>
                <span style="font-size: 0.75rem; color: #9ca3af;">
                  {new Date(post.data.date).toLocaleDateString('en-US', {
                    month: 'short',
                    day: 'numeric',
                    year: 'numeric'
                  })}
                </span>
              </article>
            ))}
          </div>
        </section>
      );
    })}
  </main>
</Layout>
